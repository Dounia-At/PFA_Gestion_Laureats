@{
    Layout = "";
}
@model List<Message>

@*<div class="messagesList">
    @foreach (Message message in Model)
    {
        <div>@message.contenu</div>
    }
</div>

<form >
    <input type="hidden" id="receiverInput" value="@ViewData["ReceiverId"]" />
    <input type="text" id="messageInput" />
    <button type="button" id="sendButton">Send</button>
</form>*@
@*<div class="col app-chat-history bg-body">
    <div class="chat-history-wrapper">*@
        <div class="chat-history-header border-bottom">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex overflow-hidden align-items-center">
                    <i class="ti ti-menu-2 ti-sm cursor-pointer d-lg-none d-block me-2"
                       data-bs-toggle="sidebar"
                       data-overlay
                       data-target="#app-chat-contacts"></i>
                    <div class="flex-shrink-0 avatar">
                        <img src="../../assets/img/avatars/2.png"
                             alt="Avatar"
                             class="rounded-circle"
                             data-bs-toggle="sidebar"
                             data-overlay
                             data-target="#app-chat-sidebar-right" />
                    </div>
                    <div class="chat-contact-info flex-grow-1 ms-2">
                        <h6 class="m-0">Felecia Rower</h6>
                        <small class="user-status text-muted">NextJS developer</small>
                    </div>
                </div>
               
            </div>
        </div>
        @*<div class="chat-history-body bg-body">*@

<ul class="list-unstyled chat-history"   id="messagesList">
                @foreach (Message message in Model)
                {
                    @if (message.UtilisateurSender.Login != Convert.ToString(Context.Response.HttpContext.Session.GetString("Login")))
                    {
                        <li class="chat-message">
                            <div class="d-flex overflow-hidden">
                                <div class="user-avatar flex-shrink-0 me-3">
                                    <div class="avatar avatar-sm">
                                        <img src="../../assets/img/avatars/@message.UtilisateurSender.Photo_Profil" alt="Avatar" class="rounded-circle">
                                    </div>
                                </div>
                                <div class="chat-message-wrapper flex-grow-1  ">
                        <div class="chat-message-text" >
                                         <p class="mb-0" >@message.contenu</p>
                            
                                       
                                    </div>
                                    <div class="chat-message-text mt-2">
                                        <p class="mb-0"></p>
                                    </div>
                                    <div class="text-muted mt-1">
                                        <small>10:02 AM</small>
                                    </div>
                                </div>
                            </div>
                        </li>

                    }
                    @if (message.UtilisateurSender.Login == Convert.ToString(Context.Response.HttpContext.Session.GetString("Login")))
                    {


                        <li class="chat-message chat-message-right" >
                            <div class="d-flex overflow-hidden " >
                                <div class="chat-message-wrapper flex-grow-1  " >
                                 <div class="chat-message-text bg-primary d-flex flex-row-reverse mt-3">
                                  <p class="mb-0  ">@message.contenu</p>
                                    
                                      </div>
                                      <br>
                                    <div class="text-end text-muted mt-1">
                                        <i class="ti ti-checks ti-xs me-1 text-success"></i>
                                        <small>10:00 AM</small>
                                    </div>
                                </div>
                                <div class="user-avatar flex-shrink-0 ms-3">
                                    <div class="avatar avatar-sm">
                                        <img src="../../assets/img/avatars/@message.UtilisateurSender.Photo_Profil" alt="Avatar" class="rounded-circle">
                                    </div>
                                </div>
                            </div>
                        </li>

                       
                    }

                  
                }

            </ul>
        @*</div>*@
        <!-- Chat message form -->
        <div class="chat-history-footer shadow-sm">
             <form class="form-send-message d-flex justify-content-between align-items-center">
        <input type="hidden" id="senderInput" value="@ViewData["senderId"]" />
                <input type="hidden" id="receiverInput" value="@ViewData["ReceiverId"]" />
                      <input type="text" id="messageInput" class="form-control message-input border-0 shadow-none message"
                       placeholder="Type your message here" name="message" />
                @*<button type="button" id="sendButton" class="align-middle d-md-inline-block d-none">Send</button>*@
                <button type="button" id="sendButton"  class="btn btn-primary d-flex send-msg-btn waves-effect waves-light">
                    <i class="ti ti-send me-md-1 me-0"></i>
                    <span class="align-middle d-md-inline-block d-none">Send</span>
                </button>


            </form>
        </div>
<p id="teste"></p>
  @*  </div>
</div>*@

@*@section js{*@

    @*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/smoothness/jquery-ui.css" />*@
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>

    @*@<script src="~/js/signalr/dist/browser/signalr.js"></script>
    @*<script src="~/js/chat.js"></script>*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.16/signalr.js" integrity="sha512-EcLNouRbMbjpfOdXh5oUkvTSzDa8Boqo3HU2a6zQkGCtOrvgORovbdvCivn6F63DiMvHpneEdLH/UJXlx2LNAQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
    const connection = new signalR.HubConnectionBuilder()
        .configureLogging(signalR.LogLevel.Debug)
        .withUrl("/chatHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();
   
         document.getElementById("sendButton").disabled = true;
         showReceived = true;
    connection.on("ReceiveMessage", function (senderId,message) {
        var senderIdFromHidden = document.getElementById("senderInput").value;
        alert(senderId);
        alert(senderIdFromHidden);
        
        if(senderIdFromHidden != senderId)
        {
            console.log("Received message: " + message);
            $("#messagesList").append("<li>" + message + "</li>");
        }
        
            //    var P = document.createElement("p");
            //    document.getElementById("messagesList").append(p);
                
            //    p.textContent = `${message}`;
           
        });

        
    connection.start().then(function () {
        //connection.invoke("InitConnectionId").catch(function (err) {
        //    console.error(err);
        //});
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {

            console.error(err);
        });
   
       document.getElementById("sendButton").addEventListener("click", function (event) {
      
        var receiverId = document.getElementById("receiverInput").value;
        var message = document.getElementById("messageInput").value;
        var senderId = document.getElementById("senderInput").value;
        console.log(senderId);
        console.log(message);
        console.log(receiverId);
        connection.invoke("SendMessage", receiverId, message).catch(function (err) {
            console.error(err);
        });
        $("input[name=message]").val("");
        event.preventDefault();
    });
        connection.on("OwnMessage", (message) => {
        console.log("é - Received message: " + message);
       
        $("#teste").append("<p>" + message + "</p>");
    });
    //window.addEventListener("unload", (event) => {
    //    connection.invoke("LibererConnectionId").catch(function (err) {
    //        console.error(err);
    //    });
    //});
    </script>

  